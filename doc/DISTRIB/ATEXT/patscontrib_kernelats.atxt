%{
//
dynload "libatsdoc/dynloadall.dats"
//
staload "libatsdoc/SATS/libatsdoc_atext.sats"
//
extern
fun
comment(x: string): atext
//
extern
fun packpreamble(): atext
extern
fun packpostamble(): atext
extern
fun packtitle(x: string): atext
extern
fun packfilename(x: string): atext
extern
fun packfilesynop(x: string): atext
//
%}

(* ****** ****** *)

%{

implement
comment(x) = atext_nil((*void*))

%}

(* ****** ****** *)

%{

implement
packpreamble
  () = let
//
val
out = stdout_ref
val () =
fprint_string (out, "\
#!/bin/bash\n\
#\n\
# This script is automatically generated.\n\
#\n\
\n\
SOURCE=${PATSCONTRIB}/contrib/kernelats/\n\
TARGET=ATS-Postiats-contrib/contrib/kernelats/\n\
\n\
srcget()\n\
{\n\
cp -f ${SOURCE}/$1 ${TARGET}/$1 ;\n\
}\n\
\n\
") // end of [val]
//
in
  atext_nil((*void*))
end // end of [packpreamble]

implement
packpostamble
  () = let
val
out = stdout_ref
val () =
fprint_string (out, "\
#\n\
echo \"The PATSCONTRIB-kernelats files have been copied.\"\n\
#\n\
# end of the automatically generated script\n\
#\n\
")
in
  atext_nil((*void*))
end // end of [packpostamble]

implement
packtitle(x) = atext_nil((*void*))

implement
packfilename
  (x) = let
//
val
out = stdout_ref
val () =
fprintf (out, "srcget \"%s\" ;\n", @(x))
//
in
  atext_nil((*void*))
end // end of [packfilename]

implement
packfilesynop(x) = atext_nil((*void*))

%}

(* ****** ****** *)

#packpreamble()

(* ****** ****** *)

#packtitle("\
PATSCONTRIB/kernelats\
")

(* ****** ****** *)

#packfilename("prelude/CATS/integer.cats")

(* ****** ****** *)

#packfilename("prelude/CATS/pointer.cats")

(* ****** ****** *)

#packfilename("prelude/CATS/integer_long.cats")
#packfilename("prelude/CATS/integer_size.cats")
#packfilename("prelude/CATS/integer_short.cats")
#packfilename("prelude/CATS/integer_fixed.cats")

(* ****** ****** *)

#packfilename("prelude/CATS/bool.cats")
#packfilename("prelude/CATS/char.cats")
#packfilename("prelude/CATS/string.cats")

(* ****** ****** *)

#packfilename("prelude/CATS/memory.cats")

(* ****** ****** *)

#packfilename("prelude/CATS/arrayptr.cats")
#packfilename("prelude/CATS/arrayref.cats")

(* ****** ****** *)

#packpostamble()

(* ****** ****** *)

%{

implement main () = ()

%}

(* ****** ****** *)

(* end of [patscontrib_kernelats.atxt] *)
