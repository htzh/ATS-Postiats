%{
//
dynload
"libatsdoc/dynloadall.dats"
//
staload
"libatsdoc/SATS/libatsdoc_atext.sats"
//
extern
fun
comment(x: string): atext
//
extern
fun packpreamble(): atext
extern
fun packpostamble(): atext
extern
fun packtitle(x: string): atext
extern
fun packfilename(x: string): atext
extern
fun packfilesynop(x: string): atext
//
%}

(* ****** ****** *)

%{

implement
comment(x) = atext_nil()

%}

(* ****** ****** *)

%{

implement
packpreamble() = let
//
val
out = stdout_ref
//
val () =
fprint_string(out, "\
#!/bin/bash\n\
#\n\
# This script is automatically generated.\n\
#\n\
\n\
SOURCE=../../contrib/CATS-parsemit\n\
TARGET=ATS-Postiats/contrib/CATS-parsemit\n\
\n\
srcget ()\n\
{\n\
cp -f ${SOURCE}/$1 ${TARGET}/$1 ;\n\
}\n\
\n\
") // end of [val]
//
in
  atext_nil()
end // end of [packpreamble]

implement
packpostamble () = let
val
out = stdout_ref
//
val () =
fprint_string (out, "\
#\n\
echo \"The \${ATSHOME}/contrib/CATS-parsemit files have been copied.\"\n\
#\n\
# end of the automatically generated script\n\
#\n\
")
in
  atext_nil ()
end // end of [packpostamble]

implement
packtitle (x) = atext_nil ()

implement
packfilename (x) = let
//
val out = stdout_ref
val () = fprintf (out, "srcget \"%s\" ;\n", @(x))
//
in
  atext_nil ()
end // end of [packfilename]

implement
packfilesynop (x) = atext_nil ()

%}

(* ****** ****** *)

#packpreamble()

(* ****** ****** *)

#packtitle("\
ATS/contrib/CATS-parsemit
")

(* ****** ****** *)
//
#packfilename("Makefile")
//
#packfilename("catsparse_all.dats")
//
#packfilename("SATS/catsparse.sats")
#packfilename("SATS/catsparse_emit.sats")
#packfilename("SATS/catsparse_syntax.sats")
#packfilename("SATS/catsparse_parsing.sats")
#packfilename("SATS/catsparse_fundecl.sats")
#packfilename("SATS/catsparse_typedef.sats")
//
#packfilename("DATS/catsparse_error.dats")
//
#packfilename("DATS/catsparse_print.dats")
//
#packfilename("DATS/catsparse_global.dats")
//
#packfilename("DATS/catsparse_symbol.dats")
//
#packfilename("DATS/catsparse_fname.dats")
#packfilename("DATS/catsparse_posloc.dats")
//
#packfilename("DATS/catsparse_syntax.dats")
//
#packfilename("DATS/catsparse_lexerr.dats")
#packfilename("DATS/catsparse_lexbuf.dats")
#packfilename("DATS/catsparse_lexing.dats")
#packfilename("DATS/catsparse_tokbuf.dats")
//
#packfilename("DATS/catsparse_parerr.dats")
#packfilename("DATS/catsparse_parsing.dats")
#packfilename("DATS/catsparse_parsing_instr.dats")
#packfilename("DATS/catsparse_parsing_d0ecl.dats")
#packfilename("DATS/catsparse_parsing_d0exp.dats")
//
#packfilename("DATS/catsparse_emit.dats")
#packfilename("DATS/catsparse_typedef.dats")
#packfilename("DATS/catsparse_fundecl.dats")
//
#packfilename("DATS/catsparse_mylib.dats")
//
(* ****** ****** *)

#packpostamble()

(* ****** ****** *)

%{
implement main (argc, argv) = ()
%}

(* ****** ****** *)

(* end of [contrib_parsemit.atxt] *)
