%{
//
dynload "libatsdoc/dynloadall.dats"
//
staload "libatsdoc/SATS/libatsdoc_atext.sats"
//
extern
fun comment (x: string): atext
//
extern
fun packpreamble (): atext
extern
fun packpostamble (): atext
extern
fun packtitle (x: string): atext
extern
fun packfilename (x: string): atext
extern
fun packfilesynop (x: string): atext
//
%}

(* ****** ****** *)

%{

implement
comment (x) = atext_nil ()

%}

(* ****** ****** *)

%{

implement
packpreamble () = let
//
val out = stdout_ref
val () = fprint_string (out, "\
#!/bin/bash\n\
#\n\
# This script is automatically generated.\n\
#\n\
\n\
SOURCE=../../doc/EXAMPLE/ATSLIB\n\
TARGET=ATS-Postiats/doc/EXAMPLE/ATSLIB\n\
\n\
srcget ()\n\
{\n\
cp -f ${SOURCE}/$1 ${TARGET}/$1 ;\n\
}\n\
\n\
") // end of [val]
//
in
  atext_nil ()
end // end of [packpreamble]

implement
packpostamble () = let
val out = stdout_ref
val () = fprint_string (out, "\
#\n\
echo \"The \${ATSHOME}/doc/EXAMPLE/ATSLIB files have been copied.\"\n\
#\n\
# end of the automatically generated script\n\
#\n\
")
in
  atext_nil ()
end // end of [packpostamble]

implement
packtitle (x) = atext_nil ()

implement
packfilename (x) = let
//
val out = stdout_ref
val () = fprintf (out, "srcget \"%s\" ;\n", @(x))
//
in
  atext_nil ()
end // end of [packfilename]

implement
packfilesynop (x) = atext_nil ()

%}

(* ****** ****** *)

#packpreamble()

(* ****** ****** *)

#packtitle("\
The ATSHOME/doc/EXAMPLE/ATSLIB\
")

(* ****** ****** *)

#packfilename("Makefile")

(* ****** ****** *)

#packfilename("prelude_basics.dats")

(* ****** ****** *)

#packfilename("prelude_char.dats")
#packfilename("prelude_bool.dats")
#packfilename("prelude_integer.dats")
#packfilename("prelude_float.dats")
#packfilename("prelude_memory.dats")
#packfilename("prelude_pointer.dats")
#packfilename("prelude_string.dats")
#packfilename("prelude_reference.dats")

(* ****** ****** *)

#packfilename("prelude_filebas.dats")
#packfilename("prelude_intrange.dats")

(* ****** ****** *)

#packfilename("prelude_grandom.dats")

(* ****** ****** *)

#packfilename("prelude_checkast.dats")

(* ****** ****** *)

#packfilename("prelude_list.dats")
#packfilename("prelude_list_vt.dats")

(* ****** ****** *)

#packfilename("prelude_option.dats")
#packfilename("prelude_option_vt.dats")

(* ****** ****** *)

#packfilename("prelude_array.dats")
#packfilename("prelude_arrayptr.dats")
#packfilename("prelude_arrayref.dats")
#packfilename("prelude_matrix.dats")
#packfilename("prelude_matrixptr.dats")
#packfilename("prelude_matrixref.dats")

(* ****** ****** *)

#packfilename("prelude_stream.dats")
#packfilename("prelude_stream_vt.dats")

(* ****** ****** *)

#packfilename("prelude_gprint.dats")

(* ****** ****** *)

#packfilename("prelude_tostring.dats")

(* ****** ****** *)

#packfilename("libats_qlist.dats")
#packfilename("libats_sllist.dats")
#packfilename("libats_dllist.dats")

(* ****** ****** *)

#packfilename("libats_gflist.dats")

(* ****** ****** *)

#packfilename("libats_bitvec.dats")

(* ****** ****** *)

#packfilename("libats_stkarray.dats")
#packfilename("libats_deqarray.dats")

(* ****** ****** *)

#packfilename("libats_dynarray.dats")

(* ****** ****** *)

#packfilename("libats_refcount.dats")

(* ****** ****** *)

#packfilename("libats_stringbuf.dats")

(* ****** ****** *)

#packfilename("libats_hashtbl_chain.dats")
#packfilename("libats_hashtbl_linprb.dats")

(* ****** ****** *)

#packfilename("libats_funset_listord.dats")
#packfilename("libats_funset_avltree.dats")

#packfilename("libats_funmap_list.dats")
#packfilename("libats_funmap_avltree.dats")
#packfilename("libats_funmap_rbtree.dats")

#packfilename("libats_funmset_listord.dats")

#packfilename("libats_funarray_braunt.dats")

#packfilename("libats_fundeque_fngtree.dats")
#packfilename("libats_funralist_nested.dats")

(* ****** ****** *)

#packfilename("libats_linset_listord.dats")
#packfilename("libats_linset_avltree.dats")

(* ****** ****** *)

#packfilename("libats_linmap_list.dats")
#packfilename("libats_linmap_avltree.dats")
#packfilename("libats_linmap_randbst.dats")
#packfilename("libats_linmap_skiplist.dats")

(* ****** ****** *)

#packfilename("libats_linheap_binomial.dats")
#packfilename("libats_linheap_binomial2.dats")

(* ****** ****** *)

#packfilename("libats_lindeque_dllist.dats")

(* ****** ****** *)

#packfilename("libats_ML_list0.dats")
#packfilename("libats_ML_array0.dats")
#packfilename("libats_ML_matrix0.dats")
#packfilename("libats_ML_string.dats")
#packfilename("libats_ML_strarr.dats")

(* ****** ****** *)

#packfilename("libats_ML_gvalue.dats")

(* ****** ****** *)

#packfilename("libats_ML_filebas.dats")
#packfilename("libats_ML_intrange.dats")

(* ****** ****** *)

#packfilename("libats_ML_funset.dats")
#packfilename("libats_ML_funmap.dats")
#packfilename("libats_ML_myfunset.dats")
#packfilename("libats_ML_myfunmap.dats")

(* ****** ****** *)

#packfilename("libats_ML_qlistref.dats")

(* ****** ****** *)

#packfilename("libats_ML_hashtblref.dats")
#packfilename("libats_ML_myhashtblref.dats")

(* ****** ****** *)

#packfilename("libats_ML_monad_list.dats")
#packfilename("libats_ML_monad_maybe.dats")

(* ****** ****** *)

#packfilename("libats_libc_math.dats")
#packfilename("libats_libc_malloc.dats")
#packfilename("libats_libc_dlfcn.dats")
#packfilename("libats_libc_fcntl.dats")
#packfilename("libats_libc_dirent.dats")
#packfilename("libats_libc_stdio.dats")
#packfilename("libats_libc_stdlib.dats")
#packfilename("libats_libc_string.dats")
#packfilename("libats_libc_strings.dats")
#packfilename("libats_libc_time.dats")
#packfilename("libats_libc_unistd.dats")
#packfilename("libats_libc_signal.dats")
#packfilename("libats_libc_fnmatch.dats")

(* ****** ****** *)

#packfilename("libats_libc_sys_stat.dats")

(* ****** ****** *)

#packfilename("libats_libc_gdbm_gdbm.dats")

(* ****** ****** *)

#packfilename("libats_ATS1_funheap_braun.dats")
#packfilename("libats_ATS1_funheap_binomial.dats")

(* ****** ****** *)

#packfilename("libats_ATS1_funset_listord.dats")
#packfilename("libats_ATS1_funmset_listord.dats")

(* ****** ****** *)

#packfilename("libats_ATS1_linset_listord.dats")

(* ****** ****** *)

#packpostamble()

(* ****** ****** *)

%{
implement main (argc, argv) = ()
%}

(* ****** ****** *)

(* end of [doc_example_atslib.atxt] *)
