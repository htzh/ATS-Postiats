%{
#define
ATSCODEFORMAT "txt"
//
#if(ATSCODEFORMAT == "txt")
//
#include
"utils/atsdoc/HATS/postiatsatxt.hats"
//
#endif // end of [ATSCCODEFORMAT]
//
#include "prelude_DATS_atext.hats"
//
val
_thisfilename =
atext_strcst"integer_short.dats"
val ((*void*)) =
theAtextMap_insert_str ("thisfilename", _thisfilename)
%}\
\
#atscode_banner()
#atscode_copyright_GPL()

#atscode_separator()

#atscode_author("Hongwei Xi")
#atscode_authoremail("gmhwxiATgmailDOTcom")
#atscode_start_time("February, 2014")

#atscode_separator()

(*
** Source:
** $PATSHOME/prelude/DATS/CODEGEN/integer_short.atxt
** Time of generation: #timestamp()
*)

#atscode_separator()

\#define
ATS_DYNLOADFLAG 0 // no dynloading

#atscode_separator()
//
staload UN = "prelude/SATS/unsafe.sats"
//
#atscode_separator()
//
implement
g0int2int<sintknd,intknd> = g0int2int_sint_int
implement
g0int2uint<sintknd,uintknd> = g0int2uint_sint_uint
//
#atscode_separator()
//
implement
g0uint2int<usintknd,intknd> = g0uint2int_usint_int
implement
g0uint2uint<usintknd,uintknd> = g0uint2uint_usint_uint
//
#atscode_separator()
//
#g0int_implist("sintknd", "sint", "sint")
//
#g0uint_implist("usintknd", "usint", "usint")
//
#atscode_separator()

#atscode_eof_strsub("\#thisfilename$")\

%{
implement
main (argc, argv) =
  fprint_filsub (stdout_ref, "integer_short_atxt.txt")
%}\
