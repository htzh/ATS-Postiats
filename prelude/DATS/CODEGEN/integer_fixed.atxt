%{
//
#define
ATSCODEFORMAT "txt"
//
#if(ATSCODEFORMAT == "txt")
//
#include
"utils/atsdoc/HATS/postiatsatxt.hats"
//
#endif // end of [ATSCCODEFORMAT]
//
#include "prelude_DATS_atext.hats"
//
val
_thisfilename = atext_strcst"integer_fixed.dats"
val ((*void*)) =
theAtextMap_insert_str ("thisfilename", _thisfilename)
%}\
\
#atscode_banner()
#atscode_copyright_GPL()

#atscode_separator()

#atscode_author("Hongwei Xi")
#atscode_authoremail("gmhwxiATgmailDOTcom")
#atscode_start_time("February, 2014")

#atscode_separator()

(*
** Source:
** $PATSHOME/prelude/DATS/CODEGEN/integer_fixed.atxt
** Time of generation: #timestamp()
*)

#atscode_separator()

\#define
ATS_DYNLOADFLAG 0 // no dynloading

#atscode_separator()
//
staload UN = "prelude/SATS/unsafe.sats"
//
#atscode_separator()
//
implement
g0int2int<int8knd,intknd> = g0int2int_int8_int
implement
g0int2int<int16knd,intknd> = g0int2int_int16_int
implement
g0int2int<int32knd,intknd> = g0int2int_int32_int
implement
g0int2int<int64knd,intknd> = g0int2int_int64_int
//
#atscode_separator()
//
implement
g0int2uint<int8knd,uintknd> = g0int2uint_int8_uint
implement
g0int2uint<int16knd,uintknd> = g0int2uint_int16_uint
implement
g0int2uint<int32knd,uintknd> = g0int2uint_int32_uint
implement
g0int2uint<int64knd,uintknd> = g0int2uint_int64_uint
//
implement
g0uint2int<uint8knd,intknd> = g0uint2int_uint8_int
implement
g0uint2int<uint16knd,intknd> = g0uint2int_uint16_int
implement
g0uint2int<uint32knd,intknd> = g0uint2int_uint32_int
implement
g0uint2int<uint64knd,intknd> = g0uint2int_uint64_int
//
implement
g0uint2uint<uint8knd,uintknd> = g0uint2uint_uint8_uint
implement
g0uint2uint<uint16knd,uintknd> = g0uint2uint_uint16_uint
implement
g0uint2uint<uint32knd,uintknd> = g0uint2uint_uint32_uint
implement
g0uint2uint<uint64knd,uintknd> = g0uint2uint_uint64_uint
//
#atscode_separator()
//
#g0int_implist("int8knd", "int8", "int8")
//
#g0int_implist("int16knd", "int16", "int16")
//
#g0int_implist("int32knd", "int32", "int32")
//
#g0int_implist("int64knd", "int64", "int64")
//
#atscode_separator()
//
#g0uint_implist("uint8knd", "uint8", "uint8")
//
#g0uint_implist("uint16knd", "uint16", "uint16")
//
#g0uint_implist("uint32knd", "uint32", "uint32")
//
#g0uint_implist("uint64knd", "uint64", "uint64")
//
#atscode_separator()

#atscode_eof_strsub("\#thisfilename$")\

%{
implement
main (argc, argv) =
  fprint_filsub (stdout_ref, "integer_fixed_atxt.txt")
%}\
