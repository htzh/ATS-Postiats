%{
//
#define
ATSCODEFORMAT "txt"
//
#if(ATSCODEFORMAT == "txt")
#include "utils/atsdoc/HATS/postiatsatxt.hats"
#endif // end of [ATSCCODEFORMAT]
//
#include "prelude_CATS_atext.hats"
//
val
_thisfilename = atext_strcst"integer_short.cats"
val ((*void*)) =
theAtextMap_insert_str ("thisfilename", _thisfilename)
//
%}\
\
#atscode_banner_for_C()
#atscode_copyright_GPL_for_C()

#atscode_separator_for_C()

/*
#atscode_author("Hongwei Xi")
#atscode_authoremail("gmhwxiATgmailDOTcom")
#atscode_start_time("January, 2013")
*/

#atscode_separator_for_C()

/*
** Source:
** $PATSHOME/prelude/CATS/CODEGEN/integer_short.atxt
** Time of generation: #timestamp()
*/

#atscode_separator_for_C()

\#ifndef ATSLIB_PRELUDE_CATS_INTEGER_SHORT
\#define ATSLIB_PRELUDE_CATS_INTEGER_SHORT

#atscode_separator_for_C()
//
\#define \\
atspre_g0int2int_int_sint(x) ((atstype_sint)(x))
\#define \\
atspre_g1int2int_int_sint(x) atspre_g0int2int_int_sint(x)
\#define \\
atspre_g0uint2int_uint_sint(x) ((atstype_sint)(x))
\#define \\
atspre_g1uint2int_uint_sint(x) atspre_g0uint2int_uint_sint(x)
//
\#define \\
atspre_g0int2uint_int_usint(x) ((atstype_usint)(x))
\#define \\
atspre_g1int2uint_int_usint(x) atspre_g0int2uint_int_usint(x)
\#define \\
atspre_g0uint2uint_uint_usint(x) ((atstype_usint)(x))
\#define \\
atspre_g1uint2uint_uint_usint(x) atspre_g0uint2uint_uint_usint(x)
//
#atscode_separator_for_C()
//
\#define \\
atspre_g0int2uint_sint_usint(x) ((atstype_usint)(x))
\#define \\
atspre_g1int2uint_sint_usint(x) atspre_g0int2uint_sint_usint(x)
\#define \\
atspre_g0uint2int_usint_sint(x) ((atstype_usint)(x))
\#define \\
atspre_g1uint2int_usint_sint(x) atspre_g0uint2int_sint_usint(x)
//
#atscode_separator_for_C()
//
\#define \\
atspre_g0int2int_sint_int(x) ((atstype_int)(x))
\#define \\
atspre_g1int2int_sint_int(x) atspre_g0int2int_sint_int(x)
//
\#define \\
atspre_g0uint2uint_usint_uint(x) ((atstype_uint)(x))
\#define \\
atspre_g1uint2uint_usint_uint(x) atspre_g0uint2uint_usint_uint(x)
//
#atscode_separator_for_C()
//
#g0int_implist("sint")\
//
#g1int_implist("sint")\
//
#atscode_separator_for_C()
//
#g0uint_implist("usint")\
//
#g1uint_implist("usint")\
//
#atscode_separator_for_C()

\#endif // ifndef ATSLIB_PRELUDE_CATS_INTEGER_SHORT

#atscode_separator_for_C()

#atscode_eof_strsub_for_C("\#thisfilename$")\

%{
implement
main (argc, argv) = fprint_filsub (stdout_ref, "integer_short_atxt.txt")
%}\
