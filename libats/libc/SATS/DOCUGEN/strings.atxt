(* ****** ****** *)

%{
implement srcfilename_get () = "../strings.sats"
%}

(* ****** ****** *)

%{
val () = patscode_count_reset()
val () = patscode_prefix_set("TRYIT/libc_strings")
%}

(* ****** ****** *)

#decltitle("\
ATSLIB/libc/strings\
")

(* ****** ****** *)

#declpreamble("\

The functions declared in this package are mostly the API for the
corresponding libc-functions declared in [strings.h], and many more details
on these functions can often be found in the Linux Programmer's manual.
See #myatscodelink("libc/SATS/strings.sats", "strings.sats") for
the SATS file in ATSLIB where these functions are declared.

")

(* ****** ****** *)

#declname("index")
#declsynop2("\

#pats2xhtmls('\
overload index with index_int
overload index with index_char
')

")

#declnamesynop("index_int")
#decldescrpt("\

This function returns a pointer to the first occurrence of a char in a
given string if the char can be found.  Otherwise, it returns the null
pointer.  Note that the null character is considered a part of the
string. ")

#declnamesynop("index_char")
#decldescrpt("\

This function is like #dyncode("rindex_int") except its taking a
#stacode("char") (instead of #stacode("int")) argument.  ")


(* ****** ****** *)

#declname("rindex")
#declsynop2("\

#pats2xhtmls('\
overload rindex with rindex_int
overload rindex with rindex_char
')

")

#declnamesynop("rindex_int")
#decldescrpt("\

This function returns a pointer to the last occurrence of a char in a
given string if the char can be found.  Otherwise, it returns the null
pointer.  Note that the null character is considered a part of the
string. ")

#declnamesynop("rindex_char")
#decldescrpt("\

This function is like #dyncode("rindex_int") except its taking a
#stacode("char") (instead of #stacode("int")) argument.  ")

(* ****** ****** *)

#declnamesynop("strcasecmp")
#declnamesynop("strncasecmp")

(* ****** ****** *)

(* end of [strings.atxt] *)
